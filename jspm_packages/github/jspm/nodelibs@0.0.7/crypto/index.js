/* */
"format cjs";function error(){var e=[].slice.call(arguments).join(" ");throw new Error([e,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join("\n"))}function each(e,t){for(var r in e)t(e[r],r)}var Buffer=require("../buffer").Buffer,rng=require("./rng");exports.createHash=require("./create-hash"),exports.createHmac=require("./create-hmac"),exports.randomBytes=function(e,t){if(!t||!t.call)return new Buffer(rng(e));try{t.call(this,void 0,new Buffer(rng(e)))}catch(r){t(r)}};var hashes=["sha1","sha256","sha512","md5","rmd160"].concat(Object.keys(require("browserify-sign/algos")));exports.getHashes=function(){return hashes};var p=require("./pbkdf2")(exports);exports.pbkdf2=p.pbkdf2,exports.pbkdf2Sync=p.pbkdf2Sync,require("browserify-aes/inject")(exports,module.exports),require("browserify-sign/inject")(module.exports,exports),require("diffie-hellman/inject")(exports,module.exports),require("create-ecdh/inject")(module.exports,exports),each(["createCredentials","publicEncrypt","privateDecrypt"],function(e){exports[e]=function(){error("sorry,",e,"is not implemented yet")}});
//# sourceMappingURL=index.js.map